install.packages("RODBC")
source('PLAYdata_clean_and_prep.R', echo = FALSE)
setwd("~/Documents/InnovationWeek2019/Example Markdown Report")
source('PLAYdata_clean_and_prep.R', echo = FALSE)
knitr::opts_chunk$set(echo = TRUE, qwraps2_markup = "markdown")
library(tidyverse)
library(likert)
library(lubridate)
library(kableExtra)
library(RODBC)
knitr::opts_chunk$set(echo = TRUE, qwraps2_markup = "markdown")
library(tidyverse)
library(likert)
library(lubridate)
library(kableExtra)
#SET FISCAL YEAR FOR REPORT, OTHER PARAMETERS YOU CREATED IN THE SOURCE SCRIPT
#Create FY variables here, to automatically update data year
FY <- "FY19"
FYstart <- "July 1, 2018"
FYend <- "June 30, 2019"
knitr::opts_chunk$set(echo = TRUE, qwraps2_markup = "markdown")
library(tidyverse)
library(likert)
library(lubridate)
library(kableExtra)
#SET FISCAL YEAR FOR REPORT, OTHER PARAMETERS YOU CREATED IN THE SOURCE SCRIPT
#Create FY variables here, to automatically update data year
FY <- "FY19"
FYstart <- "July 1, 2018"
FYend <- "June 30, 2019"
DECA <- read.csv('DECA_7.16.19.csv', header = TRUE)
DECAanalysis <- DECA %>%
select(SiteName, RatingYear, ChildId, RaterType, RatingPeriod, TpfRaw, TpfDescription) %>%
filter(RatingYear=='2018-2019', SiteName %in% c('Lowry', 'Sun Valley', 'Rude Park', 'DCCA', 'Edna Oliver'),
RatingPeriod %in% c('P', 'T'))
DECAraw <- DECAanalysis %>%
select(-TpfDescription) %>%
spread(RatingPeriod, TpfRaw)
DECAraw$Change <- DECAraw$`T`-DECAraw$P
DECAraw$ChangeCat <- if_else(DECAraw$Change>0,'Positive',
if_else(DECAraw$Change<0,'Negative','No Change'))
DECAcat <- DECAanalysis %>%
select(-TpfRaw) %>%
spread(RatingPeriod, TpfDescription)
format(DECA %>%
filter(RatingYear=='2018-2019', SiteName %in% c('Lowry', 'Sun Valley', 'Rude Park', 'DCCA', 'Edna Oliver')) %>%
summarise(Freq = n()),big.mark=",",trim=TRUE)
DECAraw$Change <- DECAraw$`T`-DECAraw$P
DECAraw$ChangeCat <- if_else(DECAraw$Change>0,'Positive',
if_else(DECAraw$Change<0,'Negative','No Change'))
ECAcat <- DECAanalysis %>%
select(-TpfRaw) %>%
spread(RatingPeriod, TpfDescription)
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Negative'|ChangeCat=='No Change') %>%
select(freq) %>%
sum()))
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Negative'|ChangeCat=='No Change') %>%
select(freq) %>%
sum())
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCa
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq))
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Negative'|ChangeCat=='No Change') %>%
select(freq) %>%
sum())
DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive')
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq)
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq)
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq)
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq))
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq))
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq))
scales::percent(DECAraw %>%
drop_na() %>%
group_by(ChangeCat) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(ChangeCat=='Positive') %>%
select(freq) %>%
sum())
